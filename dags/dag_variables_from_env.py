# dags/dag_variables_from_env.py

# Importa as classes principais do Airflow
from airflow import DAG
from airflow.operators.python import PythonOperator
import pendulum

# üõ†Ô∏è Importa a fun√ß√£o utilit√°ria para obter o nome do aluno via vari√°vel de ambiente
# Como a pasta `utils` foi movida para dentro de `dags`, usamos o prefixo `dags.`
from utils.env import get_nome_aluno


def imprimir_mensagem():
    """
    Fun√ß√£o chamada pela task.
    L√™ o nome do aluno do .env e imprime uma sauda√ß√£o personalizada.
    """
    nome = get_nome_aluno()
    print(f"Ol√°, {nome}! Essa DAG est√° lendo o valor diretamente do arquivo .env.")


# Define argumentos padr√£o para a DAG (ex: retry em caso de falha)
default_args = {
    "retries": 1,
    "retry_delay": pendulum.duration(seconds=10),
}

# Cria a DAG em si
with DAG(
    dag_id="dag_variables_from_env",  # Nome vis√≠vel na interface do Airflow
    start_date=pendulum.datetime(2024, 6, 30, tz="UTC"),  # Data de in√≠cio com fuso UTC
    schedule_interval=None,           # Execu√ß√£o apenas manual
    catchup=False,                    # N√£o executa DAGs passadas
    default_args=default_args,
    tags=["aula", "env", "dotenv"]    # Tags para facilitar busca na UI
) as dag:

    # Cria√ß√£o da task que imprime a mensagem
    saudacao = PythonOperator(
        task_id="saudacao_env",
        python_callable=imprimir_mensagem,
    )
